name: build-and-deploy

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest

#     env:
#       NODE_VERSION: '16'

#     steps:
#       # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v3
#         with:
#           fetch-depth: 0

#       - name: Install pnpm
#         uses: pnpm/action-setup@v2
#         with:
#           version: 7

#       - name: Setup Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ env.NODE_VERSION }}
#           cache: pnpm

#       - name: Install dependencies
#         run: pnpm install --frozen-lockfile

#       - name: Build site
#         run: pnpm build

#       - name: Deploy
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: blog/.vuepress/dist
#           cname: blog.zxh.io
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 下载源码
      - name: Checkout
        uses: actions/checkout@main

      
      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 7

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build site
        run: pnpm build
        run: tar -zcvf release.tgz blog/.vuepress/dist

      # 发布 Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
        
      # 上传构建结果到 Release
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release.tgz
          asset_name: release.tgz
          asset_content_type: application/x-tgz

      - name: Deploy
        uses: appleboy/ssh-action@main
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            cd /www/wwwroot/cenmcc.cn
            wget https://github.com/{githubName}/{libName}/releases/latest/download/release.tgz -O release.tgz
            tar zxvf release.tgz
